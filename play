#!/bin/bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: Thu Mar 30 21:24:46 CST 2017
# Module: openshift
# Submodule: 
# Command: install
###############################################################################

source "${HI_CLI_HOME}/bin/colors"
source "${HI_CLI_HOME}/bin/clap"
source "${HI_CLI_HOME}/bin/logging"
###############################################################################
function play() {
  playbook="$1"
  description="$2"
  hosts_conf=

  log_info "play ${playbook}"

  extra_vars="ansible_working_directory=${PWD} "

  if [ -f ${PWD}/hosts.conf ]; then
    hosts_conf="-i ${PWD}/hosts.conf"
  fi
  if [ -f ${HOME}/.openshift/hosts.conf ]; then
    hosts_conf="-i ${HOME}/.openshift/hosts.conf"
  fi
  
  if [ "${openshift_master_default_subdomain}" != "" ]; then
    extra_vars="${extra_vars} openshift_master_default_subdomain=${openshift_master_default_subdomain}"
  fi
  
  if [ "${password}" != "" ]; then
    extra_vars="${extra_vars} admin_password=${password}"
  fi
  if [ "${install_docker}" != "" ]; then
    extra_vars="${extra_vars} force_install_docker=${install_docker}"
  fi
  if [ "${master_ip}" != "" ]; then
    extra_vars="${extra_vars} master_ip=${master_ip}"
  fi
  if [ "${install_storage}" != "" ]; then
    extra_vars="${extra_vars} install_storage=True"
  fi

  topology_json_file="${PWD}/topology.json"
  if [ ! -f "${topology_json_file}" ]; then
    log_warn "${topology_json_file} not found!"
    exit
  fi

  pushd "${module_dir}" > /dev/null
  
  if [ ! -d "${module_dir}/gluster-kubernetes" ]; then
    git clone https://github.com/gluster/gluster-kubernetes.git
    cp "${topology_json_file}" ${PWD}/gluster-kubernetes/deploy/  
  fi

  if [ ! -d "${module_dir}/openshift-ansible" ]; then
    git clone https://github.com/openshift/openshift-ansible.git
  fi

  pushd ${module_dir}/openshift-ansible > /dev/null
    if [ "${openshift_ansible_version}" == "" ]; then
      openshift_ansible_version="master"
    fi
    git reset --hard > /dev/null
    git checkout ${openshift_ansible_version} > /dev/null
  popd > /dev/null

  ansible all ${hosts_conf} -m ping

  ansible_verbose_mode=
  if [ "${verbose}" != "" ];
  then
    ansible_verbose_mode="-v"
  fi
  if [ "${more}" != "" ];
  then
    ansible_verbose_mode="-vvv"
  fi

  find playbook/nodes -name "*.yml" | while read line; do 

    pb=$(echo $line | awk -F"/" '{print $NF}' | awk -F'.' '{print $1}' | awk -F'-' '{print $NF}')

    for b in "${books}"; do
      if [ "${b}" == "${pb}" ]; then
        ansible-playbook ${hosts_conf} ${line} ${ansible_verbose_mode} --extra-vars "${extra_vars}"
      fi
    done
  done

  read -d '' cli << _EOF_ 
  ansible-playbook ${hosts_conf} ${playbook} ${ansible_verbose_mode} --extra-vars "${extra_vars}"
_EOF_
  log_debug "${cli}"
  if prompt_yesorno "Do you wish to play $1 to $2? [yes/no]"; then
    ansible-playbook ${hosts_conf} ${playbook} ${ansible_verbose_mode} --extra-vars "${extra_vars}"
  fi

  result=$?

  popd > /dev/null
}

###############################################################################
